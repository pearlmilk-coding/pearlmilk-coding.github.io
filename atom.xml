<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Pmt code</title>
  
  <subtitle>逆襲之路</subtitle>
  <link href="https://pearlmilk-coding.github.io/atom.xml" rel="self"/>
  
  <link href="https://pearlmilk-coding.github.io/"/>
  <updated>2021-11-07T20:58:52.728Z</updated>
  <id>https://pearlmilk-coding.github.io/</id>
  
  <author>
    <name>Pmt</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ZeroJudge c290</title>
    <link href="https://pearlmilk-coding.github.io/2021/11/08/zero_judege_c290/"/>
    <id>https://pearlmilk-coding.github.io/2021/11/08/zero_judege_c290/</id>
    <published>2021-11-07T19:48:10.000Z</published>
    <updated>2021-11-07T20:58:52.728Z</updated>
    
    <content type="html"><![CDATA[<p>題目: <a href="https://zerojudge.tw/ShowProblem?problemid=c290">https://zerojudge.tw/ShowProblem?problemid=c290</a></p><h2 id="內容"><a href="#內容" class="headerlink" title="內容"></a>內容</h2><p>將一個十進位正整數的奇數位數的和稱為A ，偶數位數的和稱為B，則A與B的絕對差值 |A －B| 稱為這個正整數的秘密差。<br>例如： 263541 的奇數位和 A = 6+5+1 =12，偶數位的和 B = 2+3+4 = 9 ，所以 263541 的秘密差是 |12 －9|= 3 。<br>請找出 X的秘密差。</p><h2 id="輸入"><a href="#輸入" class="headerlink" title="輸入"></a>輸入</h2><p>輸入為一行含有一個十進位表示法的正整數X，之後是一個換行字元。</p><h2 id="輸出"><a href="#輸出" class="headerlink" title="輸出"></a>輸出</h2><p>請輸出 X的秘密差 Y(以十進位表示法輸出 )，以換行字元結尾 。</p><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>小心不要str index out of range 就好</p><h2 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="built_in">input</span>()</span><br><span class="line">b=c=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(a),<span class="number">2</span>):</span><br><span class="line">    b += <span class="built_in">int</span>(a[i])</span><br><span class="line">    c += <span class="built_in">int</span>(a[i+<span class="number">1</span>]) <span class="keyword">if</span> i+<span class="number">1</span>&lt;<span class="built_in">len</span>(a) <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">max</span>(b,c)-<span class="built_in">min</span>(b,c))</span><br></pre></td></tr></table></figure><h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>拿來練習簡化還不錯</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;題目: &lt;a href=&quot;https://zerojudge.tw/ShowProblem?problemid=c290&quot;&gt;https://zerojudge.tw/ShowProblem?problemid=c290&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;內容&quot;&gt;&lt;a href</summary>
      
    
    
    
    <category term="ZeroJudge" scheme="https://pearlmilk-coding.github.io/categories/ZeroJudge/"/>
    
    
  </entry>
  
  <entry>
    <title>ZeroJudge g275</title>
    <link href="https://pearlmilk-coding.github.io/2021/11/07/zero_judege_g275/"/>
    <id>https://pearlmilk-coding.github.io/2021/11/07/zero_judege_g275/</id>
    <published>2021-11-06T22:18:11.000Z</published>
    <updated>2021-11-07T21:16:38.271Z</updated>
    
    <content type="html"><![CDATA[<p>題目: <a href="https://zerojudge.tw/ShowProblem?problemid=g275">https://zerojudge.tw/ShowProblem?problemid=g275</a></p><h2 id="內容"><a href="#內容" class="headerlink" title="內容"></a>內容</h2><p>我們把平聲標記為 0 而仄聲標記為 1</p><p>七言對聯有三個限制：<br>A: 二四不同二六同：每一句第二、四個字必須不同平仄，而第二、六個字必須相同平仄<br>B: 仄起平收：第一句的結尾必須為仄聲，第二句的結尾必須為平聲<br>C: 上下相對：第一、二句的第二、四、六個字平仄必須不同</p><p>給你 n 組對聯，分別用0, 1 代表平仄，請輸出它違反了哪幾條規則<br>若以上規則皆無違反，請輸出None</p><h2 id="輸入"><a href="#輸入" class="headerlink" title="輸入"></a>輸入</h2><p>輸入一個正整數 n (1 ≤ n ≤ 30) 代表對聯數量，接下來有 2n 行，每行有 7 個數字，數字不是 0 就是 1</p><h2 id="輸出"><a href="#輸出" class="headerlink" title="輸出"></a>輸出</h2><p>對於每個對聯，輸出一行表示它違反了哪些規則，若三個規則都遵守則輸出 None</p><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>依題分為A、B、C來解<br>注意: 輸入時的是str，判斷1、0 時需用’0’、’1’</p><h2 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">flag=[<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">int</span>(<span class="built_in">input</span>())):</span><br><span class="line">    flag=[<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    a = <span class="built_in">input</span>().split()</span><br><span class="line">    b = <span class="built_in">input</span>().split()</span><br><span class="line"></span><br><span class="line">    flag[<span class="number">0</span>]=<span class="number">1</span> <span class="keyword">if</span>(a[<span class="number">1</span>]==a[<span class="number">3</span>] <span class="keyword">or</span> a[<span class="number">1</span>]!=a[<span class="number">5</span>] <span class="keyword">or</span> b[<span class="number">1</span>]==b[<span class="number">3</span>] <span class="keyword">or</span> b[<span class="number">1</span>]!=b[<span class="number">5</span>])<span class="keyword">else</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    flag[<span class="number">1</span>]=<span class="number">1</span> <span class="keyword">if</span>(a[<span class="number">6</span>]!=<span class="string">&#x27;1&#x27;</span> <span class="keyword">or</span> b[<span class="number">6</span>]!=<span class="string">&#x27;0&#x27;</span>)<span class="keyword">else</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    flag[<span class="number">2</span>]=<span class="number">1</span> <span class="keyword">if</span>(a[<span class="number">1</span>]==b[<span class="number">1</span>] <span class="keyword">or</span> a[<span class="number">3</span>]==b[<span class="number">3</span>] <span class="keyword">or</span> a[<span class="number">5</span>]==b[<span class="number">5</span>])<span class="keyword">else</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(flag[<span class="number">0</span>]==<span class="number">1</span>):<span class="built_in">print</span>(<span class="string">&quot;A&quot;</span>,end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span>(flag[<span class="number">1</span>]==<span class="number">1</span>):<span class="built_in">print</span>(<span class="string">&quot;B&quot;</span>,end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span>(flag[<span class="number">2</span>]==<span class="number">1</span>):<span class="built_in">print</span>(<span class="string">&quot;C&quot;</span>,end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span>(flag[<span class="number">0</span>]==<span class="number">0</span> <span class="keyword">and</span> flag[<span class="number">1</span>]==<span class="number">0</span> <span class="keyword">and</span> flag[<span class="number">2</span>]==<span class="number">0</span>):<span class="built_in">print</span>(<span class="string">&quot;None&quot;</span>,end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\n&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>老樣子，不夠簡化，思考ing….<br>日更兩篇，我 == 優秀</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;題目: &lt;a href=&quot;https://zerojudge.tw/ShowProblem?problemid=g275&quot;&gt;https://zerojudge.tw/ShowProblem?problemid=g275&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;內容&quot;&gt;&lt;a href</summary>
      
    
    
    
    <category term="ZeroJudge、待簡化" scheme="https://pearlmilk-coding.github.io/categories/ZeroJudge%E3%80%81%E5%BE%85%E7%B0%A1%E5%8C%96/"/>
    
    
  </entry>
  
  <entry>
    <title>ZeroJudge a020</title>
    <link href="https://pearlmilk-coding.github.io/2021/11/07/zero_judege_a020/"/>
    <id>https://pearlmilk-coding.github.io/2021/11/07/zero_judege_a020/</id>
    <published>2021-11-06T20:34:52.000Z</published>
    <updated>2021-11-07T21:17:08.391Z</updated>
    
    <content type="html"><![CDATA[<p>題目: <a href="https://zerojudge.tw/ShowProblem?problemid=a020">https://zerojudge.tw/ShowProblem?problemid=a020</a></p><h2 id="內容"><a href="#內容" class="headerlink" title="內容"></a>內容</h2><p>英文代號以下表轉換成數字</p><pre><code>  A=10 台北市     J=18 新竹縣     S=26 高雄縣  B=11 台中市     K=19 苗栗縣     T=27 屏東縣  C=12 基隆市     L=20 台中縣     U=28 花蓮縣  D=13 台南市     M=21 南投縣     V=29 台東縣  E=14 高雄市     N=22 彰化縣     W=32 金門縣  F=15 台北縣     O=35 新竹市     X=30 澎湖縣  G=16 宜蘭縣     P=23 雲林縣     Y=31 陽明山  H=17 桃園縣     Q=24 嘉義縣     Z=33 連江縣  I=34 嘉義市     R=25 台南縣</code></pre><ul><li>英文轉成的數字, 個位數乘9再加上十位數的數字</li><li>各數字從右到左依次乘 1~8</li><li>求出上述兩者及最後一碼的和</li><li>除10 若整除，則為 real，否則為 fake</li></ul><p>例： T112663836<br>2 + 7<em>9 + 1</em>8 + 1<em>7 + 2</em>6 + 6<em>5 + 6</em>4 + 3<em>3 + 8</em>2 + 3*1 + 6 = 180<br>除以 10 整除，因此為 real </p><h2 id="輸入"><a href="#輸入" class="headerlink" title="輸入"></a>輸入</h2><p>輸入共一行。每一行包含一組身分證號碼</p><h2 id="輸出"><a href="#輸出" class="headerlink" title="輸出"></a>輸出</h2><p>每讀入一行身分證字號，輸出 real or fake</p><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>可以分成三塊來進行<br>1.由於大寫字母中間有跳數(不照規律)，建一個字典來儲存對應關係，接著轉換<br>2.數字從[1]~[8]<br>3.最後加上[9]</p><h2 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">dic = &#123; <span class="string">&quot;A&quot;</span>: <span class="number">10</span>, <span class="string">&quot;J&quot;</span>: <span class="number">18</span>, <span class="string">&quot;S&quot;</span>: <span class="number">26</span>,</span><br><span class="line">        <span class="string">&quot;B&quot;</span>: <span class="number">11</span>, <span class="string">&quot;K&quot;</span>: <span class="number">19</span>, <span class="string">&quot;T&quot;</span>: <span class="number">27</span>,</span><br><span class="line">        <span class="string">&quot;C&quot;</span>: <span class="number">12</span>, <span class="string">&quot;L&quot;</span>: <span class="number">20</span>, <span class="string">&quot;U&quot;</span>: <span class="number">28</span>,</span><br><span class="line">        <span class="string">&quot;D&quot;</span>: <span class="number">13</span>, <span class="string">&quot;M&quot;</span>: <span class="number">21</span>, <span class="string">&quot;V&quot;</span>: <span class="number">29</span>,</span><br><span class="line">        <span class="string">&quot;E&quot;</span>: <span class="number">14</span>, <span class="string">&quot;N&quot;</span>: <span class="number">22</span>, <span class="string">&quot;W&quot;</span>: <span class="number">32</span>,</span><br><span class="line">        <span class="string">&quot;F&quot;</span>: <span class="number">15</span>, <span class="string">&quot;O&quot;</span>: <span class="number">35</span>, <span class="string">&quot;X&quot;</span>: <span class="number">30</span>,</span><br><span class="line">        <span class="string">&quot;G&quot;</span>: <span class="number">16</span>, <span class="string">&quot;P&quot;</span>: <span class="number">23</span>, <span class="string">&quot;Y&quot;</span>: <span class="number">31</span>,</span><br><span class="line">        <span class="string">&quot;H&quot;</span>: <span class="number">17</span>, <span class="string">&quot;Q&quot;</span>: <span class="number">24</span>, <span class="string">&quot;Z&quot;</span>: <span class="number">33</span>,</span><br><span class="line">        <span class="string">&quot;I&quot;</span>: <span class="number">34</span>, <span class="string">&quot;R&quot;</span>: <span class="number">25</span>&#125;</span><br><span class="line">Count = <span class="number">0</span></span><br><span class="line">n = <span class="built_in">input</span>()</span><br><span class="line"></span><br><span class="line">a = (dic[n[<span class="number">0</span>]])</span><br><span class="line"><span class="keyword">if</span> (a &lt; <span class="number">20</span>):</span><br><span class="line">    a = (a-<span class="number">10</span>)*<span class="number">9</span>+<span class="number">1</span></span><br><span class="line"><span class="keyword">elif</span>(a &lt; <span class="number">30</span>):</span><br><span class="line">    a = (a-<span class="number">20</span>)*<span class="number">9</span>+<span class="number">2</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    a = (a-<span class="number">30</span>)*<span class="number">9</span>+<span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">9</span>,<span class="number">1</span>):</span><br><span class="line">    Count += <span class="built_in">int</span>(n[i])*(<span class="number">9</span>-i)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;real&quot;</span> <span class="keyword">if</span> (a+Count+<span class="built_in">int</span>(n[<span class="number">9</span>]))%<span class="number">10</span> == <span class="number">0</span> <span class="keyword">else</span><span class="string">&quot;fake&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>這一題我還在思考字典和判斷式的簡化<br>先放在這，等我想到再來更新作法</p><p>ps.有沒有大神能幫幫忙，暗示一下。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;題目: &lt;a href=&quot;https://zerojudge.tw/ShowProblem?problemid=a020&quot;&gt;https://zerojudge.tw/ShowProblem?problemid=a020&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;內容&quot;&gt;&lt;a href</summary>
      
    
    
    
    <category term="ZeroJudge、待簡化" scheme="https://pearlmilk-coding.github.io/categories/ZeroJudge%E3%80%81%E5%BE%85%E7%B0%A1%E5%8C%96/"/>
    
    
  </entry>
  
  <entry>
    <title>ZeroJudge e612</title>
    <link href="https://pearlmilk-coding.github.io/2021/11/06/zero_judege_e612/"/>
    <id>https://pearlmilk-coding.github.io/2021/11/06/zero_judege_e612/</id>
    <published>2021-11-05T20:29:33.000Z</published>
    <updated>2021-11-07T21:16:24.402Z</updated>
    
    <content type="html"><![CDATA[<p>題目: <a href="https://zerojudge.tw/ShowProblem?problemid=e612">https://zerojudge.tw/ShowProblem?problemid=e612</a></p><h2 id="內容"><a href="#內容" class="headerlink" title="內容"></a>內容</h2><p>每個題目都由一個數字n組成，該數字n用於建立將1和n之間的所有數字連接在一起的大數字。<br>例如：如果n = 6，生成的數字為123456。如果n = 13，生成的數字為12345678910111213。<br>問:這些生成的數字是否可被3整除。</p><h2 id="輸入"><a href="#輸入" class="headerlink" title="輸入"></a>輸入</h2><p>輸入第一行為一個整數T，T代表有幾組測資。<br>每組測資有一個正整數n (1 ≤ n ≤ 10^9)，n如題目所述。<br>輸入指定的文字</p><h2 id="輸出"><a href="#輸出" class="headerlink" title="輸出"></a>輸出</h2><p>對於每組測資<br>如果生成的數字為3的倍數<br>輸出”YES”<br>否則<br>輸出”NO”</p><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>觀察規律後可發現當 n % 3 == 0 or 2 為 3 的倍數</p><h2 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">int</span>(<span class="built_in">input</span>())):</span><br><span class="line">    num = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;YES&quot;</span><span class="keyword">if</span> num%<span class="number">3</span>==<span class="number">0</span> <span class="keyword">or</span> num%<span class="number">3</span>==<span class="number">2</span> <span class="keyword">else</span> (<span class="string">&quot;NO&quot;</span>))</span><br></pre></td></tr></table></figure><h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>這一題似水非水，水就在一線之間。<br>藉由這題可以練習if else 的簡化寫法(三元運算式)。<br>這裡就不討論這個，想看看的可以到(網址-還沒寫啦) </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;題目: &lt;a href=&quot;https://zerojudge.tw/ShowProblem?problemid=e612&quot;&gt;https://zerojudge.tw/ShowProblem?problemid=e612&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;內容&quot;&gt;&lt;a href</summary>
      
    
    
    
    <category term="ZeroJudge" scheme="https://pearlmilk-coding.github.io/categories/ZeroJudge/"/>
    
    
  </entry>
  
  <entry>
    <title>ZeroJudge a009</title>
    <link href="https://pearlmilk-coding.github.io/2021/11/05/zero_judege_a009/"/>
    <id>https://pearlmilk-coding.github.io/2021/11/05/zero_judege_a009/</id>
    <published>2021-11-04T22:45:22.000Z</published>
    <updated>2021-11-07T21:17:20.937Z</updated>
    
    <content type="html"><![CDATA[<p>題目: <a href="https://zerojudge.tw/ShowProblem?problemid=a009">https://zerojudge.tw/ShowProblem?problemid=a009</a></p><h2 id="內容"><a href="#內容" class="headerlink" title="內容"></a>內容</h2><p>把明碼的每個字元加上某一個整數K而得到密碼的字元（明碼及密碼字元一定都在ASCII碼中可列印的範圍內）。<br>例如若K=2，那麼apple經過加密後就變成crrng了。解密則是反過來做。這個問題是給你一個密碼字串，請你依照上述的解密方式輸出明碼。</p><p>至於在本任務中K到底是多少，參照Sample Input及Sample Output推出來吧！</p><h2 id="輸入"><a href="#輸入" class="headerlink" title="輸入"></a>輸入</h2><p>輸入共一行，每行含有1個字串，就是需要解密的明碼。</p><h2 id="輸出"><a href="#輸出" class="headerlink" title="輸出"></a>輸出</h2><p>對每一測試資料，請輸出解密後的密碼。</p><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>從 輸入J 和 輸出C 的ASCII碼即可推出K = -7</p><p>—–溫馨提示—–<br>字元轉ASCII : ocd()<br>ASCII轉字元 : char()</p><h2 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="built_in">input</span>()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(s)):</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">chr</span>(<span class="built_in">ord</span>(s[i])-<span class="number">7</span>),end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>我第一次遇到的ASCII題目，Python 不像 C 一樣可以藉由宣告 char 然後用 %d 的運算，整題的重點就是 ocd ~~啦 </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;題目: &lt;a href=&quot;https://zerojudge.tw/ShowProblem?problemid=a009&quot;&gt;https://zerojudge.tw/ShowProblem?problemid=a009&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;內容&quot;&gt;&lt;a href</summary>
      
    
    
    
    <category term="ZeroJudge" scheme="https://pearlmilk-coding.github.io/categories/ZeroJudge/"/>
    
    
  </entry>
  
  <entry>
    <title>ZeroJudge c294</title>
    <link href="https://pearlmilk-coding.github.io/2021/11/04/zero_judege_c294/"/>
    <id>https://pearlmilk-coding.github.io/2021/11/04/zero_judege_c294/</id>
    <published>2021-11-03T19:19:25.000Z</published>
    <updated>2021-11-07T21:16:53.436Z</updated>
    
    <content type="html"><![CDATA[<p>題目: <a href="https://zerojudge.tw/ShowProblem?problemid=c294">https://zerojudge.tw/ShowProblem?problemid=c294</a></p><h2 id="內容"><a href="#內容" class="headerlink" title="內容"></a>內容</h2><p>三角形除了是最基本的多邊形外，亦可進一步細分為鈍角三形、直角三角形及銳角三角形。<br>若給定三個線段的長度，透過下列公式運算，即可得知此三線段能否構成三角形，亦可判斷是直角、銳角和鈍角三角形。</p><h2 id="輸入"><a href="#輸入" class="headerlink" title="輸入"></a>輸入</h2><p>輸入僅一行包含三正整數，三正整數皆小於 30,001，兩數之間有一空白。</p><h2 id="輸出"><a href="#輸出" class="headerlink" title="輸出"></a>輸出</h2><p>輸出共有兩行，第一行由小而大印出此三正整數，兩字之間以一個空白格間格，最後 一個數字後不應有空白；第二行輸出三角形的類型：</p><p>　　若無法構成三角形時輸出「No」</p><p>　　若構成鈍角三形時輸出「Obtuse」</p><p>　　若直角三形時輸出「Right」</p><p>　　若銳角三形時輸出「Acute」</p><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>依照題目的需求先輸入3個正整數，在運用if…elif…else判斷式子配合三角形判斷公式即可。</p><h2 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">s=[<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line">s[<span class="number">0</span>],s[<span class="number">1</span>],s[<span class="number">2</span>]  = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())</span><br><span class="line">s=<span class="built_in">sorted</span>(s)</span><br><span class="line"><span class="keyword">for</span>  i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">3</span>,<span class="number">1</span>):</span><br><span class="line"><span class="built_in">print</span>(s[i],end=<span class="string">&quot; &quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#題目提供的判斷式   </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (s[<span class="number">0</span>])+s[<span class="number">1</span>] &lt;= s[<span class="number">2</span>]:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\nNo&quot;</span>)    </span><br><span class="line"><span class="keyword">elif</span> (s[<span class="number">0</span>]**<span class="number">2</span> + s[<span class="number">1</span>]**<span class="number">2</span> == s[<span class="number">2</span>]**<span class="number">2</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\nRight&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> (s[<span class="number">0</span>]**<span class="number">2</span> + s[<span class="number">1</span>]**<span class="number">2</span> &gt; s[<span class="number">2</span>]**<span class="number">2</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\nAcute&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\nObtuse&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#也可以用高中教過的餘弦定理</span></span><br><span class="line"></span><br><span class="line">n=(<span class="built_in">float</span>(s[<span class="number">0</span>]**<span class="number">2</span>+s[<span class="number">1</span>]**<span class="number">2</span>-s[<span class="number">2</span>]**<span class="number">2</span>))/<span class="built_in">float</span>(<span class="number">2</span>*s[<span class="number">0</span>]*s[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (s[<span class="number">0</span>] + s[<span class="number">1</span>] &lt;= s[<span class="number">2</span>]:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\nNo&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span>(n == <span class="number">0</span>):</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\nRight&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span>(n&gt;<span class="number">0</span> <span class="keyword">and</span> n&lt;<span class="number">1</span>):</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\nAcute&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\nObtuse&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h1><p>在Python 裡’ ^ ‘是位運算子，跟運算子不一樣喔~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;題目: &lt;a href=&quot;https://zerojudge.tw/ShowProblem?problemid=c294&quot;&gt;https://zerojudge.tw/ShowProblem?problemid=c294&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;內容&quot;&gt;&lt;a href</summary>
      
    
    
    
    <category term="ZeroJudge" scheme="https://pearlmilk-coding.github.io/categories/ZeroJudge/"/>
    
    
  </entry>
  
  <entry>
    <title>ZeroJudge a001</title>
    <link href="https://pearlmilk-coding.github.io/2021/11/03/zero_judege_a001/"/>
    <id>https://pearlmilk-coding.github.io/2021/11/03/zero_judege_a001/</id>
    <published>2021-11-02T21:02:10.000Z</published>
    <updated>2021-11-07T21:17:36.934Z</updated>
    
    <content type="html"><![CDATA[<p>題目: <a href="https://zerojudge.tw/ShowProblem?problemid=a001">https://zerojudge.tw/ShowProblem?problemid=a001</a></p><h2 id="內容"><a href="#內容" class="headerlink" title="內容"></a>內容</h2><p>學習所有程式語言的第一個練習題<br>請寫一個程式，可以讀入指定的字串，並且輸出指定的字串。</p><h2 id="輸入"><a href="#輸入" class="headerlink" title="輸入"></a>輸入</h2><p>輸入指定的文字</p><h2 id="輸出"><a href="#輸出" class="headerlink" title="輸出"></a>輸出</h2><p>輸出指定的文字</p><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>這就是無底黑洞的起點囉，請享受旅途!</p><h2 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="built_in">input</span>()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello,&quot;</span>,a)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;題目: &lt;a href=&quot;https://zerojudge.tw/ShowProblem?problemid=a001&quot;&gt;https://zerojudge.tw/ShowProblem?problemid=a001&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;內容&quot;&gt;&lt;a href</summary>
      
    
    
    
    <category term="ZeroJudge" scheme="https://pearlmilk-coding.github.io/categories/ZeroJudge/"/>
    
    
  </entry>
  
  <entry>
    <title>使用Hexo + Github Pages 來建立自己的網站</title>
    <link href="https://pearlmilk-coding.github.io/2021/11/02/about_my_hexo/"/>
    <id>https://pearlmilk-coding.github.io/2021/11/02/about_my_hexo/</id>
    <published>2021-11-02T05:15:04.000Z</published>
    <updated>2021-11-07T21:17:47.930Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="2b016c0faacb9470c64a17f512b99810269ca9fb4e1eb62e0b61e2728d420f86">7e10928e75451b592fe67f91ee1b0461e2565f47250f1135b8c792c7aaf8f48cf1ce55ef16c68b098ee5a45b8243f54e3662c39c5c40d4c0edaac0a33ff8e172cd085b72ba456d3bf660225042fc23b2913a795604c552c619d768a13ade287fd9e64997933e2429495ffe624cce115c87c0f3363c494faf66b39febead8a58ce91308b11b760a52c8319145c66154145871d8bf83e105f15d57957e9430bf7fc148b168a6bc6c088170342adc5546a609c13afdb5a06fc14354f8b595a3c412ce8c69aa475204bb3bfe4c6cb33daf89eb57df9f006c272730e27dc7a412e4209c60f4c4d962caa3cb32ae5d0d8d424f15dcfd15127fecadbdd535f87accaf98203a3951bf6fbd225ee43901b4bbaa611761af574ec6c1bf6b37db2b18fee27cd68af1b9cf33a3c2709338b2ef6baebde16070e9411a6a4e8c8fae4da17298408aeaca12ca9012de5a0f945d09f47cf2e10312bdb5e89310379ab7c2de837e96275648bcb1631417cbc09d537e7d6bbfe4f880d1bcb198f533f84b6377d5e05744a4e2f86149a18b416127fe1318a31b55676a2aa6233b1c0cff2d8fe47a2cdcad78063534155bec2cb2f702dc4a776b4efca0583eb2f5b62e81c54a2aa7f19b1d5641b1a34b80e8f881647494f87dd6cdbfc961511fdbadf548237f6b29ae7b56ea6c70e5aaa77733a1f54066b661e1a987261f809364e4994375effd78f9ea46aa3ef234ac251925061d5e0b293030e3176188fb240eb8cefca4a6a344cc99e1b350b2b706b3e6fe5d982ab15a2bb62ee167eefcd89ab597db32411223ef24f38c2c1c6ec65e61e8712a62a81917f2d38afc4e8309bc649c6317e3fdb42dfa7546035e8485e80fa150fb83e20fc3ff91c7dc458ec8b330f0a9e718dd056f3e23be972380d7f4c8c4512d5247bcf2d021934be1e7aaec3eac18f5a15ade924bb3cffd0b0f3acff128ed6720ebfaa673679b8c7d08dd13c859634cfa035618c6282af854b7aeea66bd1d01d18705356f271fcb8fadf5f0660ae443086158b085692f9b624acc042dd176f1ff5b51a244d2a536b6326655e171c427e61a7bcb3a32fe5e0b26ddca899d49fac492ca305aa2b3889485da86ecd67c4f1d34cf76357878d263d0d0bec1aba8dae9e1e515ae06dab02dee88f63d99c37a0efa077c6c61fbe72d2a2dcca4571c38e264dbbb636990a1977d83fab6b1e0fdf0372545f87c55ae7db25e503585d19a6ecbf073d58b50f3270d552940345cadcc3a840d2eaa6b7dbc1a439c161083aaf45e65c2c0a7c92e53787f67df86f649c991ea2cf3f722bd37c50905ca044d7a45205e3f1402e9b974d8b9ac0578412b818d9a7d6101e13f9f309f963929cc5b79a7bd1821d35fc9e5375380d0dff6e1027bc694d2994a0d8db563694730c71e5fa6aa92803025b6fc28ebd4b8663e3e50405e2484da381adf8873b8b717862a373600910c270f9ad5160faad07fe320091a7f4e39e69b1fe2cb7c7746be2e4112f2012cbe9a938cbb70acf0f44d2bce3feee469e6088a2d17c766573bc0b88436f2f151a77a792a40024c9c5760dd877dde0ff3b10af6e07d0d17ad704e318f792ff8475584ea29b4ef4d9aeca71080601c4a59a32d8e3d1a1f94ca776150d6e9c5fc1cff199f04d71aea2dd2836a3a2018e59c87a0c86d232c763478870fed6e3d7f7e13ab679e93142155229950fddfdd53084f7014714d6c021fe605310525c7fc71861f9b7431343e92f94c1341ef7a823750691d076ee73791909ae3a120110e43b29a937752c1acde8864f4a2ab65b1513853fb5eadf7518e0380599318f046e7225e088c190ce8447f73224aae5d255b590de6bc94849aa8d5dc2dba4a355a78d9c4dddf2f6b26b6ca34fbec3ebadd5ca303d5f8dfc47ab63156781ee5935b287ef38a7dec6a71351b096dd1ec952c514e0d66f0128934cd5b7ce5b87132e2d503acb3b586e8efaf5f7a2720b3a505c2717921e3d90c213fbfac67c4b142566cf287904195834228841900399e7429c3f4373e6e1667cabc9d8c4b2ba080b8ad3a8540361f61d4e67da3b9509d45a885b499530f5bf4399f161e6084218517a79a72e70355ab713fee7e085b329aa65a26ec9f3e52f29ef559c50476c651f700cbc19d56f02b74ef5fa3f9477f4bff7e439fad124984eadecc45145800ed204819c2fb4368abf30d2f183d52602549547a65430a2a05aea4311f3ced88efeb19d7beb0d38e1af07792fbbb1281c596ce48a3b692be28b007959741f3907307eaf968000b16356a75127654bd864abc798413eed53dc82fb8f5b88ec0cb097dcfca84c1c296753b20b7d7830fffae76692f300b6daa70e6bb18eb07adb8f8041f3401d12f4a8bd041595a08237bf9c94828d4d65cf1eb118998d5c43137d15c3158fc951c5b7bcc82776a526aec679bdf335d144a13ff7a8d09ceddb95044b31711cd551153ed3183f508595fee971b56f07d6cb0789b82f99dbd8b8475ec89c66774f46fea1290f3c4d884fde0f63d3ebeb930d91b2de6a3e2733eddfc3055bd922ca1d26240a0fc0cca16dbcc819b23e830cc9152039d00cd4c471ce728449d66141a0b5d7615fd179115008aee2d631e79f99d0f0f81f697cb6f1ff619662d1c5bdc2d11db4f12934330eeab474918ed9bbc56c53b593519edd0dcea807bbba372aabb4590d1c4e1ec15fa147abe5e34a4de36f07d642d98074f2fb2aa0ad65fda817fbc6092758a6f93394eb920214799cb089130c6e16912bff5904d3ca284d8633e157fe7609ebb895f0da43196f47e3182cd9cf1dea5a7af68f9dd1b531133905022246a6d56ea84222fcd9d4d399b1f095c5769b6a5aa94f1d2e3915b109f7d0d227b47f53ee8637fabc1953065d3d6a043fc388e5950e54ba4065debdb67416b7648007d0fcff58095c84d5f062e840f06fecb073d7f4e1d15f38b1287e94a0fc99e401cc2523bf45858efa3ccdb0d7b5b85a724b1fbe04e4cc7fde08b47a294ea6c2d877a057c9b93e062ea6818adb1d4a8205783f61966cf878cfeb798a5303c56ea17375280ddb4b712071e14e4d153c8d7c08d96c9109538a191b62e136cfed142dd056dd10cb67a55a4b733abd695fdd0866a34de3aec0a5d4f0cd273792385c7cf066f9bdd0819edb9e986a3a4581dfb8e44dfbd4f85b0c1a74c83a957713acf64bbb81143c33f19dd48515d8f47dae981135bc6d141d7609d788fd41fb51a4af9076ec161aa07abc5bf5a074da7255560377e57862c6d688932fe516233aa3bfed826de2718cdaabbbf9492d0d017f66a23887119116fa087aabb852bcafbb54a9d627ea478aa3d0bc2a15b45a0b0a28921c00bb7b4668665eb5d8965f75491078e5e23daac004b7e764649ff29f70c0c97ddda47b38fb243ac8c0dc6605d116a9a03e6be656057659ce54102a3a47b626d1185a530a75783d4c1e25bb3f87c5465ae3c39e9de228df902aaa340fb963effda5253f8c35dad03c639f0b7680aa6900182a92867c4de9fdaec94232dd1346b2dc797a726effb9c70e80c4f65ab8713339df41fb1316f04645074f9f44fbf9eac8557e712c0a7d52c60905b2293d43c736ff189d51c6e697484ba96f7df54269a4ee65929c9a81ecfb6db618857c00d68220b24e56add41a75ecf9b1b7671bd1025fe3592671bc6256105b5165aefb3c31b5fd442eb1fde</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Password測試中:Roger</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">備忘錄 :紀錄網站所做過的更新，給對網站有興趣想嘗試的人</summary>
    
    
    
    <category term="Hexo" scheme="https://pearlmilk-coding.github.io/categories/Hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>歡迎來到我的程式回憶</title>
    <link href="https://pearlmilk-coding.github.io/2021/10/23/welcome/"/>
    <id>https://pearlmilk-coding.github.io/2021/10/23/welcome/</id>
    <published>2021-10-23T08:12:10.000Z</published>
    <updated>2021-11-07T21:20:31.797Z</updated>
    
    <content type="html"><![CDATA[<h2 id="歡迎"><a href="#歡迎" class="headerlink" title="歡迎~ ~"></a>歡迎~ ~</h2><p>這裡是我學習上的所有回憶、過程。歡迎糾正內容上的錯誤，排版、設計正在努力學習中…，敬請見諒~ ~</p><h2 id="關於這個網站"><a href="#關於這個網站" class="headerlink" title="關於這個網站"></a>關於這個網站</h2><p>希望記錄程式上的點點滴滴，這是我第一次也是我第一個架設的網站，內容會是自己解題的過程、各個自己在程式設計上的啟發、過程。</p><h3 id="目標"><a href="#目標" class="headerlink" title="目標"></a>目標</h3><p>總有一天我要成為程式裡的大神，跟一群大神切磋。<br>擁有一群和自己一樣熱情的夥伴!</p>]]></content>
    
    
    <summary type="html">各位程式大神，歡迎!</summary>
    
    
    
    
  </entry>
  
</feed>
